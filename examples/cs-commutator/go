#!/bin/csh


if ($#argv != 2) then
	echo "need 2 args: bin-directory ouput-extension"
	exit(1)
endif

set d=$1

set out=$2

# job AD-gt

$d/mccune -f gt.in AD.in > AD-gt.$out

# job AD-cs

$d/mccune -f cs.in AD.in > AD-cs.$out

# job AE-gt

$d/mccune -f gt.in AE.in > AE-gt.$out

# job AE-cs

$d/mccune -f cs.in AE.in > AE-cs.$out

# job AN-gt

$d/mccune -f gt.in AN.in > AN-gt.$out

# job AN-cs

$d/mccune -f cs.in AN.in > AN-cs.$out

# job DA-gt

$d/mccune -f gt.in DA.in > DA-gt.$out

# job DA-cs

$d/mccune -f cs.in DA.in > DA-cs.$out

# job DE-gt

$d/mccune -f gt.in DE.in > DE-gt.$out

# job DE-cs

$d/mccune -f cs.in DE.in > DE-cs.$out

# job DN-gt

$d/mccune -f gt.in DN.in > DN-gt.$out

# job DN-cs

$d/mccune -f cs.in DN.in > DN-cs.$out

# job EA-gt

$d/mccune -f gt.in EA.in > EA-gt.$out

# job EA-cs

$d/mccune -f cs.in EA.in > EA-cs.$out

# job ED-gt

$d/mccune -f gt.in ED.in > ED-gt.$out

# job ED-cs

$d/mccune -f cs.in ED.in > ED-cs.$out

# job EN-gt

$d/mccune -f gt.in EN.in > EN-gt.$out

# job EN-cs

$d/mccune -f cs.in EN.in > EN-cs.$out

# job NA-gt

$d/mccune -f gt.in NA.in > NA-gt.$out

# job NA-cs

$d/mccune -f cs.in NA.in > NA-cs.$out

# job ND-gt

$d/mccune -f gt.in ND.in > ND-gt.$out

# job ND-cs

$d/mccune -f cs.in ND.in > ND-cs.$out

# job NE-gt

$d/mccune -f gt.in NE.in > NE-gt.$out

# job NE-cs

$d/mccune -f cs.in NE.in > NE-cs.$out
