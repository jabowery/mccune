============================== directproof ===========================
mccune (32) version Dec-2007, Dec 2007.
Process 16136 was started by mccune on cleo,
Thu Dec 13 11:03:58 2007
The command was "/home/mccune/bin/mccune -f gt.in NE.in".
============================== end of head ===========================
op(450,infix,@).
op(400,infix_right,*).

============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% Proof 1 at 4.12 (+ 0.05) seconds: E.
% Length of proof is 31.
% Level of proof is 11.
% Maximum clause weight is 19.
% Given clauses 303.

1 (x * y) * z = x * y * z.  [assumption].
2 e * x = x.  [assumption].
3 x' * x = e.  [assumption].
4 x @ y = x' * y' * x * y.  [assumption].
5 x' * y' * x * y = x @ y.  [copy(4),flip(a)].
6 (x @ y) * z = z * (x @ y).  [assumption].
7 A * B * C * B * A != B * A * C * A * B # answer(E).  [assumption].
8 e * x = y' * y * x.  [para(3(a,1),1(a,1,1))].
9 x = y' * y * x.  [para(2(a,1),8(a,1))].
10 x' * x * y = y.  [copy(9),flip(a)].
11 (x @ y) * z = x' * (y' * x * y) * z.  [para(5(a,1),1(a,1,1))].
12 (x @ y) * z = x' * y' * (x * y) * z.  [para(1(a,1),11(a,2,2))].
13 (x @ y) * z = x' * y' * x * y * z.  [para(1(a,1),12(a,2,2,2))].
14 x' * y' * x * y * z = (x @ y) * z.  [copy(13),flip(a)].
15 (x * y)' * z' * x * y * z = x * y @ z.  [para(1(a,1),5(a,1,2,2))].
16 (x * (y @ z)) * u = (y @ z) * x * u.  [para(6(a,1),1(a,1,1))].
17 x * (y @ z) * u = (y @ z) * x * u.  [para(1(a,1),16(a,1))].
18 (x @ y) * z * u = z * (x @ y) * u.  [copy(17),flip(a)].
19 x'' * e = x.  [para(3(a,1),10(a,1,2))].
20 x'' * (x @ y) = y' * x * y.  [para(5(a,1),10(a,1,2))].
21 x'' * y = x * y.  [para(10(a,1),10(a,1,2))].
22 x * (x @ y) = y' * x * y.  [para(21(a,1),20(a,1))].
23 x' * y * x = y * (y @ x).  [copy(22),flip(a)].
24 x * e = x.  [para(21(a,1),19(a,1))].
25 x'' * (x @ y) * z = y' * x * y * z.  [para(14(a,1),10(a,1,2))].
26 x * (x @ y) * z = y' * x * y * z.  [para(21(a,1),25(a,1))].
27 x' * y * x * z = y * (y @ x) * z.  [copy(26),flip(a)].
28 (x * y)' * y * x = x * y @ x.  [para(10(a,1),15(a,1,2))].
29 (x' * x * y)' * (x * y @ x) * y = x' * x * y @ x * y.  [para(14(a,1),15(a,1,2))].
30 y' * (x * y @ x) * y = x' * x * y @ x * y.  [para(10(a,1),29(a,1,1,1))].
31 y' * y * (x * y @ x) = x' * x * y @ x * y.  [para(6(a,1),30(a,1,2))].
32 x * y @ x = x' * x * y @ x * y.  [para(10(a,1),31(a,1))].
33 x * y @ x = y @ x * y.  [para(10(a,1),32(a,2,1))].
34 (x * y)' * y * x = y @ x * y.  [para(33(a,1),28(a,2))].
35 x * x' = e.  [para(21(a,1),3(a,1))].
36 x * e = x''.  [para(21(a,1),24(a,1))].
37 x = x''.  [para(24(a,1),36(a,1))].
38 x'' = x.  [copy(37),flip(a)].
39 e = x * y * (x * y)'.  [para(35(a,1),1(a,1))].
40 x * y * (x * y)' = e.  [copy(39),flip(a)].
41 x' * e = y * (x * y)'.  [para(40(a,1),10(a,1,2))].
42 x' = y * (x * y)'.  [para(24(a,1),41(a,1))].
43 x * (y * x)' = y'.  [copy(42),flip(a)].
44 x' * y' = (y * x)'.  [para(43(a,1),10(a,1,2))].
45 (x * y)' = y' * x'.  [copy(44),flip(a)].
46 (y' * x') * y * x = y @ x * y.  [para(45(a,1),34(a,1,1))].
47 y' * x' * y * x = y @ x * y.  [para(1(a,1),46(a,1))].
48 y @ x = y @ x * y.  [para(5(a,1),47(a,1))].
49 x @ y * x = x @ y.  [copy(48),flip(a)].
50 x * y @ x = y @ x.  [para(49(a,1),33(a,2))].
51 x' * (x * y) * x = (x * y) * (y @ x).  [para(50(a,1),23(a,2,2))].
52 x' * x * y * x = (x * y) * (y @ x).  [para(1(a,1),51(a,1,2))].
53 y * x = (x * y) * (y @ x).  [para(10(a,1),52(a,1))].
54 y * x = (y @ x) * x * y.  [para(6(a,2),53(a,2))].
55 (x @ y) * y * x = x * y.  [copy(54),flip(a)].
56 x'' * y * (y @ x) * z = y * x * z.  [para(27(a,1),10(a,1,2))].
57 x * y * (y @ x) * z = y * x * z.  [para(38(a,1),56(a,1,1))].
58 (x @ y) * z * y * x = z * x * y.  [para(55(a,1),18(a,2,2))].
63 x * y * z * y * x = y * x * z * x * y.  [para(58(a,1),57(a,1,2,2))].
64 $F # answer(E).  [resolve(63,a,7,a)].

============================== end of proof ==========================

% Directproof did 2 transformation(s) on 1 proof(s).
