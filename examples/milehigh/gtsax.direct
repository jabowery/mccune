============================== directproof ===========================
mccune (32) version Dec-2007, Dec 2007.
Process 15677 was started by mccune on cleo,
Thu Dec 13 11:01:24 2007
The command was "/home/mccune/bin/mccune -f gtsax.in".
============================== end of head ===========================

============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% Proof 1 at 0.02 (+ 0.00) seconds: inverse.
% Length of proof is 12.
% Level of proof is 7.
% Maximum clause weight is 29.
% Given clauses 11.

1 x * x' = y * y' # label(inverse) # label(non_clause) # label(goal).  [goal].
2 x * (y * (((z * z') * (u * y)') * x))' = u # label(gt_sax).  [assumption].
3 c4 * c4' != c5 * c5' # label(inverse) # answer(inverse).  [deny(1)].
5 x * ((y * (((z * z') * (u * y)') * w))' * (((v5 * v5') * u') * x))' = w.  [para(2(a,1),2(a,1,2,1,2,1,2,1))].
6 x * ((((y * y') * (z * u)') * (w * w')) * (z * x))' = u.  [para(2(a,1),2(a,1,2,1,2,1))].
7 x * ((y * (z * z')) * (u * x))' = ((w * w') * (y * u)') * (v5 * v5').  [para(6(a,1),2(a,1,2,1,2,1))].
8 ((x * x') * (y * z)') * (u * u') = w * ((y * (v5 * v5')) * (z * w))'.  [copy(7),flip(a)].
9 (x * x') * (y * (z * ((u * (w * w')) * (y * z))'))' = u.  [para(8(a,1),2(a,1,2,1,2))].
10 (x * (y * ((z * (u * u')) * (x * y))'))' * (w' * z)' = w.  [para(9(a,1),2(a,1,2,1,2))].
11 (x * (y * ((z * (u * u')) * (x * y))'))' * ((w * (((v5 * v5') * ((v6 * v6') * w)') * v7))' * z)' = v7.  [para(9(a,1),5(a,1,2,1,2))].
12 x * (((y * y') * ((z * z') * x)') * u) = u.  [para(10(a,1),11(a,1))].
13 x * x' = y * y'.  [para(12(a,1),2(a,1,2,1))].
15 y * y' = x * x'.  [copy(13),flip(a)].
16 $F # answer(inverse).  [resolve(15,a,3,a)].

============================== end of proof ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% Proof 2 at 0.18 (+ 0.02) seconds: identity.
% Length of proof is 33.
% Level of proof is 18.
% Maximum clause weight is 34.
% Given clauses 37.

1 x * (y * y') = x # label(identity) # label(non_clause) # label(goal).  [goal].
2 x * (y * (((z * z') * (u * y)') * x))' = u # label(gt_sax).  [assumption].
3 c6 * (c7 * c7') != c6 # label(identity) # answer(identity).  [deny(1)].
4 x * ((y * (((z * z') * (u * y)') * w))' * (((v5 * v5') * u') * x))' = w.  [para(2(a,1),2(a,1,2,1,2,1,2,1))].
5 x * ((((y * y') * (z * u)') * (w * w')) * (z * x))' = u.  [para(2(a,1),2(a,1,2,1,2,1))].
6 (x * (((y * y') * (z * x)') * ((u * u') * (w * v5)')))' * (v5 * z)' = w.  [para(2(a,1),2(a,1,2,1,2))].
7 x * ((((y * y') * z') * (u * u')) * (w * x))' = (v5 * (((v6 * v6') * (z * v5)') * w))'.  [para(4(a,1),2(a,1,2,1,2,1))].
8 (x * (((y * y') * (z * x)') * u))' = w * ((((v5 * v5') * z') * (v6 * v6')) * (u * w))'.  [copy(7),flip(a)].
9 x * ((y * (z * z')) * (u * x))' = ((w * w') * (y * u)') * (v5 * v5').  [para(5(a,1),2(a,1,2,1,2,1))].
10 ((x * x') * (y * z)') * (u * u') = w * ((y * (v5 * v5')) * (z * w))'.  [copy(9),flip(a)].
11 (x * x') * (y * (z * ((u * (w * w')) * (y * z))'))' = u.  [para(10(a,1),2(a,1,2,1,2))].
12 (x * (y * ((z * (u * u')) * (x * y))'))' * (w' * z)' = w.  [para(11(a,1),2(a,1,2,1,2))].
13 (x * (y * ((z * (u * u')) * (x * y))'))' * ((w * (((v5 * v5') * ((v6 * v6') * w)') * v7))' * z)' = v7.  [para(11(a,1),4(a,1,2,1,2))].
14 x * (((y * y') * ((z * z') * x)') * u) = u.  [para(12(a,1),13(a,1))].
15 x * x' = y * y'.  [para(14(a,1),2(a,1,2,1))].
16 x * y = (z * (((u * u') * (y * z)') * ((w * w') * ((v5 * v5') * x)')))'.  [para(2(a,1),14(a,1,2))].
17 (x * (((y * y') * (z * x)') * ((u * u') * ((w * w') * v5)')))' = v5 * z.  [copy(16),flip(a)].
18 x * (y' * ((z * z') * x))' = y.  [para(15(a,1),2(a,1,2,1,2,1))].
20 x * (((y * y') * (z * z')) * (u * x))' = u'.  [para(15(a,1),5(a,1,2,1,1,1))].
21 (x * x')' * ((y * y') * z) = z.  [para(15(a,1),14(a,1,2,1))].
22 (x * x')' * (y' * (z * z'))' = y.  [para(15(a,1),18(a,1,2,1,2))].
23 (x * x')' * (y * y') = (z * z')'.  [para(15(a,1),21(a,1,2))].
24 (x * x')' = (y * y')' * (z * z').  [copy(23),flip(a)].
25 (x * x')' = (y * y')'.  [para(24(a,2),21(a,1))].
26 (x * x') * (y * y')' = z * z'.  [para(25(a,1),15(a,1,2))].
27 (x * (((y * y') * (z * x)') * ((u * u') * ((w * w') * (v5 * v5')')')))' * (v6' * z)' = v6.  [para(26(a,2),6(a,1,1,1,2,2,2,1))].
28 ((x * x')' * y) * (z' * y)' = z.  [para(17(a,1),27(a,1,1))].
29 (x * x') * (y * (z * (((u * u') * (w * z)') * y))')' = (v5 * v5') * w'.  [para(8(a,2),11(a,1,2,1,2))].
30 (x * x') * y' = (z * z') * y'.  [para(2(a,1),29(a,1,2,1))].
31 x * (y' * (x' * (z * z'))')' = y.  [para(22(a,1),28(a,1,1))].
32 ((x * x')' * y'') * ((z * z') * (u * u')')' = y.  [para(26(a,2),28(a,1,2,1))].
33 ((x * x') * ((y * y') * z')') * (u * u') = w * (((v5 * v5') * (v6 * v6')) * (z' * w))'.  [para(30(a,1),10(a,1,1,2,1))].
34 ((x * x') * ((y * y') * z')') * (u * u') = z''.  [para(20(a,1),33(a,2))].
35 x * y' = (z * z') * (y * x')'.  [para(2(a,1),31(a,1,2,1))].
36 (x * x') * (y * z')' = z * y'.  [copy(35),flip(a)].
37 (x * x') * (y' * (z * z')'')' = y.  [para(21(a,1),31(a,1,2,1,2,1))].
38 (x * x')' * y'' = y.  [para(36(a,1),37(a,1))].
39 (z * (y * y')') * (u * u') = z''.  [para(36(a,1),34(a,1,1))].
40 x'' = (x * (y * y')') * (z * z').  [copy(39),flip(a)].
41 y * ((z * z') * (u * u')')' = y.  [para(38(a,1),32(a,1,1))].
42 x * (y * y')' = x.  [para(36(a,1),41(a,1,2,1))].
43 x'' = x * (y * y').  [para(42(a,1),40(a,2,1))].
44 (x * x')' * y'''' = y.  [para(43(a,2),18(a,1,2,1))].
45 x'' = x.  [para(38(a,1),44(a,1))].
50 x * (y * y') = x.  [para(43(a,1),45(a,1))].
52 x * (y * y') = x.  [para(15(a,2),50(a,1,2))].
53 $F # answer(identity).  [resolve(52,a,3,a)].

============================== end of proof ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% Proof 3 at 0.34 (+ 0.02) seconds: associativity.
% Length of proof is 48.
% Level of proof is 24.
% Maximum clause weight is 34.
% Given clauses 47.

1 (x * y) * z = x * (y * z) # label(associativity) # label(non_clause) # label(goal).  [goal].
2 x * (y * (((z * z') * (u * y)') * x))' = u # label(gt_sax).  [assumption].
3 (c1 * c2) * c3 != c1 * (c2 * c3) # label(associativity) # answer(associativity).  [deny(1)].
4 x * ((y * (((z * z') * (u * y)') * w))' * (((v5 * v5') * u') * x))' = w.  [para(2(a,1),2(a,1,2,1,2,1,2,1))].
5 x * ((((y * y') * (z * u)') * (w * w')) * (z * x))' = u.  [para(2(a,1),2(a,1,2,1,2,1))].
6 (x * (((y * y') * (z * x)') * ((u * u') * (w * v5)')))' * (v5 * z)' = w.  [para(2(a,1),2(a,1,2,1,2))].
7 x * ((((y * y') * z') * (u * u')) * (w * x))' = (v5 * (((v6 * v6') * (z * v5)') * w))'.  [para(4(a,1),2(a,1,2,1,2,1))].
8 (x * (((y * y') * (z * x)') * u))' = w * ((((v5 * v5') * z') * (v6 * v6')) * (u * w))'.  [copy(7),flip(a)].
9 x * ((y * (z * z')) * (u * x))' = ((w * w') * (y * u)') * (v5 * v5').  [para(5(a,1),2(a,1,2,1,2,1))].
10 ((x * x') * (y * z)') * (u * u') = w * ((y * (v5 * v5')) * (z * w))'.  [copy(9),flip(a)].
11 (x * x') * (y * (z * ((u * (w * w')) * (y * z))'))' = u.  [para(10(a,1),2(a,1,2,1,2))].
12 (x * (y * ((z * (u * u')) * (x * y))'))' * (w' * z)' = w.  [para(11(a,1),2(a,1,2,1,2))].
13 (x * (y * ((z * (u * u')) * (x * y))'))' * ((w * (((v5 * v5') * ((v6 * v6') * w)') * v7))' * z)' = v7.  [para(11(a,1),4(a,1,2,1,2))].
14 x * (((y * y') * ((z * z') * x)') * u) = u.  [para(12(a,1),13(a,1))].
15 x * x' = y * y'.  [para(14(a,1),2(a,1,2,1))].
16 x * y = (z * (((u * u') * (y * z)') * ((w * w') * ((v5 * v5') * x)')))'.  [para(2(a,1),14(a,1,2))].
17 (x * (((y * y') * (z * x)') * ((u * u') * ((w * w') * v5)')))' = v5 * z.  [copy(16),flip(a)].
18 x * (y' * ((z * z') * x))' = y.  [para(15(a,1),2(a,1,2,1,2,1))].
19 x * (((y * y') * (z * z')) * (u * x))' = u'.  [para(15(a,1),5(a,1,2,1,1,1))].
20 (x * x')' * ((y * y') * z) = z.  [para(15(a,1),14(a,1,2,1))].
21 (x * x')' * (y' * (z * z'))' = y.  [para(15(a,1),18(a,1,2,1,2))].
22 (x * x')' * (y * y') = (z * z')'.  [para(15(a,1),20(a,1,2))].
23 (x * x')' = (y * y')' * (z * z').  [copy(22),flip(a)].
24 (x * x')' = (y * y')'.  [para(23(a,2),20(a,1))].
25 (x * x') * (y * y')' = z * z'.  [para(24(a,1),15(a,1,2))].
26 (x * (((y * y') * (z * x)') * ((u * u') * ((w * w') * (v5 * v5')')')))' * (v6' * z)' = v6.  [para(25(a,2),6(a,1,1,1,2,2,2,1))].
27 ((x * x')' * y) * (z' * y)' = z.  [para(17(a,1),26(a,1,1))].
28 (x * x') * (y * (z * (((u * u') * (w * z)') * y))')' = (v5 * v5') * w'.  [para(8(a,2),11(a,1,2,1,2))].
29 (x * x') * y' = (z * z') * y'.  [para(2(a,1),28(a,1,2,1))].
30 x * ((y * y')'' * (z * x))' = z'.  [para(27(a,1),2(a,1,2,1,2,1))].
31 x * (y' * (x' * (z * z'))')' = y.  [para(21(a,1),27(a,1,1))].
32 ((x * x')' * y'') * ((z * z') * (u * u')')' = y.  [para(25(a,2),27(a,1,2,1))].
33 ((x * x') * ((y * y') * z')') * (u * u') = w * (((v5 * v5') * (v6 * v6')) * (z' * w))'.  [para(29(a,1),10(a,1,1,2,1))].
34 ((x * x') * ((y * y') * z')') * (u * u') = z''.  [para(19(a,1),33(a,2))].
35 x * y' = (z * z') * (y * x')'.  [para(2(a,1),31(a,1,2,1))].
36 (x * x') * (y * z')' = z * y'.  [copy(35),flip(a)].
37 x * y = (y' * (((z * z') * ((u * u') * x)')' * (w * w'))')'.  [para(31(a,1),14(a,1,2))].
38 (x' * (((y * y') * ((z * z') * u)')' * (w * w'))')' = u * x.  [copy(37),flip(a)].
39 (x * x') * (y' * (z * z')'')' = y.  [para(20(a,1),31(a,1,2,1,2,1))].
40 (x * x')' * y'' = y.  [para(36(a,1),39(a,1))].
41 (z * (y * y')') * (u * u') = z''.  [para(36(a,1),34(a,1,1))].
42 x'' = (x * (y * y')') * (z * z').  [copy(41),flip(a)].
43 y * ((z * z') * (u * u')')' = y.  [para(40(a,1),32(a,1,1))].
44 x * (y * y')' = x.  [para(36(a,1),43(a,1,2,1))].
45 x'' = x * (y * y').  [para(44(a,1),42(a,2,1))].
46 x * (y''' * (((z * z') * u') * x))' = ((w * w') * (u * y)')'.  [para(45(a,2),4(a,1,2,1,1,1))].
47 ((x * x') * (y * z)')' = u * (z''' * (((w * w') * y') * u))'.  [copy(46),flip(a)].
48 x' * (((y * y') * (x * z)') * (u * u'))''' = z.  [para(45(a,2),5(a,1,2,1))].
49 ((x * x') * (y * z)')'' = u * ((y * (w * w')) * (z * u))'.  [para(45(a,2),10(a,1))].
50 ((x * x') * (y * z)') * (u * u') = w * (y'' * (z * w))'.  [para(45(a,2),10(a,2,2,1,1))].
51 ((x * x') * (y * z)') * (u * u') = z' * (y * (w * w'))'''.  [para(45(a,2),10(a,2,2,1))].
52 x' * (y * (z * z'))''' = ((u * u') * (y * x)') * (w * w').  [copy(51),flip(a)].
53 (x * x')' * y'''' = y.  [para(45(a,2),18(a,1,2,1))].
54 x'' = x.  [para(40(a,1),53(a,1))].
55 x'' = x * ((y * y') * (z * z')').  [para(24(a,1),45(a,2,2,2))].
56 x = x * ((y * y') * (z * z')').  [para(54(a,1),55(a,1))].
57 x = x * (y * y').  [para(44(a,1),56(a,2,2))].
58 x * (y * y') = x.  [copy(57),flip(a)].
59 (x * x') * ((y * y')'' * z'')' = z'.  [para(45(a,2),30(a,1,2,1,2))].
60 (x * x') * ((y * y') * z'')' = z'.  [para(54(a,1),59(a,1,2,1,1))].
61 (x * x') * ((y * y') * z)' = z'.  [para(54(a,1),60(a,1,2,1,2))].
62 (x' * (u'' * (w * w'))')' = u * x.  [para(61(a,1),38(a,1,1,2,1,1,1))].
63 (x' * (u * (w * w'))')' = u * x.  [para(54(a,1),62(a,1,1,2,1,1))].
64 (x' * y')' = y * x.  [para(58(a,1),63(a,1,1,2,1))].
65 x' * y''' = ((u * u') * (y * x)') * (w * w').  [para(58(a,1),52(a,1,2,1,1,1))].
66 x' * y' = ((u * u') * (y * x)') * (w * w').  [para(54(a,1),65(a,1,2,1))].
67 x' * y' = (u * u') * (y * x)'.  [para(58(a,1),66(a,2))].
68 (x * x') * (y * z)' = z' * y'.  [copy(67),flip(a)].
69 (z' * y') * (u * u') = w * (y'' * (z * w))'.  [para(68(a,1),50(a,1,1))].
70 z' * y' = w * (y'' * (z * w))'.  [para(58(a,1),69(a,1))].
71 z' * y' = w * (y * (z * w))'.  [para(54(a,1),70(a,2,2,1,1))].
72 x * (y * (z * x))' = z' * y'.  [copy(71),flip(a)].
73 (z' * y')'' = u * ((y * (w * w')) * (z * u))'.  [para(68(a,1),49(a,1,1,1))].
74 (y * z)' = u * ((y * (w * w')) * (z * u))'.  [para(64(a,1),73(a,1,1))].
75 (y * z)' = u * (y * (z * u))'.  [para(58(a,1),74(a,2,2,1,1))].
76 (x * y)' = y' * x'.  [para(72(a,1),75(a,2))].
77 x' * (((y * y') * (z' * x')) * (u * u'))''' = z.  [para(76(a,1),48(a,1,2,1,1,1,1,2))].
78 x' * ((y * y') * (z' * x'))''' = z.  [para(58(a,1),77(a,1,2,1,1,1))].
79 x' * ((z' * x')' * (y * y')')'' = z.  [para(76(a,1),78(a,1,2,1,1))].
80 x' * ((x'' * z'') * (y * y')')'' = z.  [para(76(a,1),79(a,1,2,1,1,1))].
81 x' * ((x * z'') * (y * y')')'' = z.  [para(54(a,1),80(a,1,2,1,1,1,1))].
82 x' * ((x * z) * (y * y')')'' = z.  [para(54(a,1),81(a,1,2,1,1,1,2))].
83 x' * ((x * z) * (y'' * y'))'' = z.  [para(76(a,1),82(a,1,2,1,1,2))].
84 x' * ((x * z) * (y * y'))'' = z.  [para(54(a,1),83(a,1,2,1,1,2,1))].
85 x' * (x * z)'' = z.  [para(58(a,1),84(a,1,2,1,1))].
86 x' * (z' * x')' = z.  [para(76(a,1),85(a,1,2,1))].
87 x' * (x'' * z'') = z.  [para(76(a,1),86(a,1,2))].
88 x' * (x * z'') = z.  [para(54(a,1),87(a,1,2,1))].
89 x' * (x * y) = y.  [para(54(a,1),88(a,1,2,2))].
90 ((x * x') * (z' * y'))' = u * (z''' * (((w * w') * y') * u))'.  [para(76(a,1),47(a,1,1,2))].
91 (z' * y')' * (x * x')' = u * (z''' * (((w * w') * y') * u))'.  [para(76(a,1),90(a,1))].
92 (y'' * z'') * (x * x')' = u * (z''' * (((w * w') * y') * u))'.  [para(76(a,1),91(a,1,1))].
93 (y * z'') * (x * x')' = u * (z''' * (((w * w') * y') * u))'.  [para(54(a,1),92(a,1,1,1))].
94 (y * z) * (x * x')' = u * (z''' * (((w * w') * y') * u))'.  [para(54(a,1),93(a,1,1,2))].
95 (y * z) * (x'' * x') = u * (z''' * (((w * w') * y') * u))'.  [para(76(a,1),94(a,1,2))].
96 (y * z) * (x * x') = u * (z''' * (((w * w') * y') * u))'.  [para(54(a,1),95(a,1,2,1))].
97 y * z = u * (z''' * (((w * w') * y') * u))'.  [para(58(a,1),96(a,1))].
98 y * z = u * (z' * (((w * w') * y') * u))'.  [para(54(a,1),97(a,2,2,1,1,1))].
99 y * z = u * ((((w * w') * y') * u)' * z'').  [para(76(a,1),98(a,2,2))].
100 y * z = u * ((u' * ((w * w') * y')') * z'').  [para(76(a,1),99(a,2,2,1))].
101 y * z = u * ((u' * (y'' * (w * w')')) * z'').  [para(76(a,1),100(a,2,2,1,2))].
102 y * z = u * ((u' * (y * (w * w')')) * z'').  [para(54(a,1),101(a,2,2,1,2,1))].
103 y * z = u * ((u' * (y * (w'' * w'))) * z'').  [para(76(a,1),102(a,2,2,1,2,2))].
104 y * z = u * ((u' * (y * (w * w'))) * z'').  [para(54(a,1),103(a,2,2,1,2,2,1))].
105 y * z = u * ((u' * y) * z'').  [para(58(a,1),104(a,2,2,1,2))].
106 y * z = u * ((u' * y) * z).  [para(54(a,1),105(a,2,2,2))].
107 x * ((x' * y) * z) = y * z.  [copy(106),flip(a)].
108 x * (y * z) = (x * y) * z.  [para(89(a,1),107(a,1,2,1))].
109 (x * y) * z = x * (y * z).  [copy(108),flip(a)].
110 $F # answer(associativity).  [resolve(109,a,3,a)].

============================== end of proof ==========================

% Directproof did 4 transformation(s) on 3 proof(s).
